stages:
  - build
  - deploy-to-staging

docker-build:
  # Use the official docker image.
  image: docker:latest
  stage: build
  services:
    - name: docker:dind
      alias: docker
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  # Default branch leaves tag empty (= latest tag)
  # All other branches are tagged with the escaped branch name (commit ref slug)
  script:
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        tag=""
        echo "Running on default branch '$CI_DEFAULT_BRANCH': tag = 'latest'"
      else
        tag=":$CI_COMMIT_REF_SLUG"
        echo "Running on branch '$CI_COMMIT_BRANCH': tag = $tag"
      fi
    - docker build --pull -t "$CI_REGISTRY_IMAGE${tag}" .
    - docker push "$CI_REGISTRY_IMAGE${tag}"
  # Run this job in a branch where a Dockerfile exists
  rules:
    - if: $CI_COMMIT_BRANCH
      exists:
        - Dockerfile

# for this deployment to work, gitlab-runner must be active on the target machine
deploy-to-staging:
  variables:
    IMAGE_REF: "$CI_REGISTRY_IMAGE:latest"
  stage: deploy-to-staging
  trigger: deployments-ssh/lprid/lprid-staging
  needs:
    - job: docker-build
      #artifacts: true
  only:
    - main